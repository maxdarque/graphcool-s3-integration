types: ./types.graphql
functions:
  # getFileUploadUrl for AWS S3 for user
  getFileUploadUrl:
    type: resolver
    schema: functions/fileManagement/getFileUploadUrl.graphql
    handler:
      code:
        src: functions/fileManagement/getFileUploadUrl.ts
        environment:
          AWS_BUCKET_GP_FILES: ${env:AWS_BUCKET_GP_FILES}
          AWS_DEFAULT_REGION: ${env:AWS_DEFAULT_REGION}
          S3_AWS_ACCESS_KEY_ID: ${env:S3_AWS_ACCESS_KEY_ID}
          S3_AWS_SECRET_ACCESS_KEY: ${env:S3_AWS_SECRET_ACCESS_KEY}

  # getFileDownloadUrl for AWS S3 for user          
  getFileDownloadUrl:
    type: resolver
    schema: functions/fileManagement/getFileDownloadUrl.graphql
    handler:
      code:
        src: functions/fileManagement/getFileDownloadUrl.ts
        environment:
          AWS_BUCKET_GP_FILES: ${env:AWS_BUCKET_GP_FILES}
          AWS_DEFAULT_REGION: ${env:AWS_DEFAULT_REGION}
          S3_AWS_ACCESS_KEY_ID: ${env:S3_AWS_ACCESS_KEY_ID}
          S3_AWS_SECRET_ACCESS_KEY: ${env:S3_AWS_SECRET_ACCESS_KEY}
  #handle file deletion from S3 before deleteDocument is called
  deleteFileFromS3:
    type: operationBefore
    operation: Document.delete
    handler:
      code:
        src: functions/fileManagement/deleteFileFromS3.ts
        environment:
          AWS_BUCKET_GP_FILES: ${env:AWS_BUCKET_GP_FILES}
          AWS_DEFAULT_REGION: ${env:AWS_DEFAULT_REGION}
          S3_AWS_ACCESS_KEY_ID: ${env:S3_AWS_ACCESS_KEY_ID}
          S3_AWS_SECRET_ACCESS_KEY: ${env:S3_AWS_SECRET_ACCESS_KEY}

permissions:

- operation: Document.read
  authenticated: true
  query: permissions/Document.graphql:read
- operation: Document.create
  authenticated: true
- operation: Document.update
  authenticated: true
  query: permissions/Document.graphql:admin
- operation: Document.delete
  authenticated: true
  query: permissions/Document.graphql:admin

rootTokens: []